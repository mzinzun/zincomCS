{"ast":null,"code":"var _jsxFileName = \"/Users/mzinzun/Documents/SQfiles/thesis-project/client/src/pageComponents/Products/Products.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Products.css';\nimport { Catagories, ShoppingCart, ProductsList, PurchaseHistory } from \"../../components/components\";\n\n// use axios module for http requests\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://localhost:8080',\n  withCredentials: true\n});\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n    // function to set css for catagory <li> displayed \n    this.setActiveLi = e => {\n      var liList = document.getElementsByTagName('li');\n      for (let i = 0; i < liList.length; i++) {\n        liList[i].classList.contains('active') && liList[i].classList.remove('active');\n      }\n      if (e) {\n        e.target.classList.add('active');\n      } else {\n        for (let i = 0; i < liList.length; i++) {\n          if (liList[i].attributes.name.nodeValue === 'Cases') {\n            liList[i].classList.add('active');\n          }\n          ;\n        }\n      }\n      ;\n    };\n    // function to retrieve and display products List by selected Catagory\n    this.getProductsList = e => {\n      var cat;\n      //  check for initial Products catagory List load from ProductDidMount\n      if (!e) {\n        cat = \"Cases\";\n      } else {\n        cat = e.target.attributes.name.value.trim();\n      }\n      // set products list to display based on selected catagory - default is cases\n      api.get(`/getProductsByCatagory/${cat}`).then(response => {\n        const data = response.data;\n        let selList = [...this.props.productSelections];\n        var usedData = data.map(item => {\n          selList.forEach(obj => obj.prod_id === item.prod_id && (item = {\n            ...item,\n            qty: obj.qty\n          }));\n          return item;\n        });\n        this.setState({\n          productsList: usedData,\n          productCatagory: data[0].catagory\n        });\n        return this.state.productsList;\n      }).then(resp => this.setActiveLi(e)).catch(error => {\n        console.log('Problem with ProductsByCatagory. error:');\n        console.log(error);\n      });\n    };\n    // function to manage products selected for purchase\n    this.handleSelections = (qty, itemId, buyBox) => {\n      var subTotal = 0;\n      if (buyBox) {\n        // test that item does not already exist in product Selections list\n        if (!this.props.productSelections.some(item => item.prod_id === Number(itemId))) {\n          const productsList = [...this.state.productsList];\n          let itemToAdd = productsList.find(item => item.prod_id === Number(itemId));\n          itemToAdd.qty = qty;\n          const selectionsList = [...this.props.productSelections, itemToAdd];\n          subTotal = selectionsList.reduce((acc, item) => acc + item.price * item.qty, 0);\n          this.props.handleProductSelections(selectionsList);\n          this.setState({\n            productsSelections: selectionsList,\n            buyTotal: subTotal\n          });\n        } else {\n          // condition if item exists in Shopping cart needs to change ** Qty is change in item\n          let newList = [...this.props.productSelections];\n          newList = newList.map(item => {\n            if (item.prod_id === Number(itemId)) {\n              item.qty = qty;\n              return item;\n            }\n            return item;\n          });\n          subTotal = newList.reduce((acc, item) => acc + item.price * item.qty, 0);\n          this.setState({\n            productsSelections: newList,\n            buyTotal: subTotal\n          });\n        }\n      }\n      if (!buyBox) {\n        console.log('Box unchecked');\n        console.log('New List to display');\n        let itemsList = [...this.props.productSelections];\n        let updateList = itemsList.filter(item => item.prod_id !== Number(itemId));\n        this.props.handleProductSelections(updateList);\n        subTotal = updateList.reduce((acc, item) => acc + item.price * item.qty, 0);\n        this.setState({\n          buyTotal: subTotal\n        });\n      }\n    };\n    // function to store shopping list to Local Storage ******* Check for useage *********************\n    this.handleCheckOut = shoppingList => {\n      //     let stringList = JSON.stringify(shoppingList)\n      //    await localStorage.setItem('holdItems', stringList);\n      this.props.history.push('/CheckOut');\n    };\n    // function to display PurchaseHistory page\n    this.showHistory = data => {\n      this.setState({\n        historyData: data,\n        showHistory: true\n      });\n    };\n    // function to update historyEmail state\n    this.handleHistoryEmail = e => {\n      this.setState({\n        historyEmail: e.target.value\n      });\n    };\n    // function to get purchase history data\n    this.handleHistoryData = () => {\n      console.log('starting handleHistoryData');\n      const email = this.state.historyEmail;\n      if (email !== '') {\n        api.get(`getCustomerPurchases/${email}`).then(response => {\n          const data = response.data;\n          console.log('data response', data);\n          if (data.noPurchases) {\n            console.log('email not on record');\n            this.setState({\n              historyEmail: ''\n            });\n          } else {\n            //convert items list from sql dbase from string to array\n            var newData = data.map(purchase => {\n              let purchItems = JSON.parse(purchase.items);\n              let purchTotal = purchItems.reduce((acc, item) => acc + item.price * item.qty, 0);\n              purchase.purchTotal = purchTotal;\n              return purchase;\n            });\n            data.length > 0 && this.showHistory(newData);\n          }\n          return data;\n        }).catch(error => {\n          console.log('Problem with CustomerPurchase. error:');\n          console.log(error);\n        });\n      }\n    };\n    // function to get purchase history item details\n    this.showPurchaseDetails = e => {\n      var arr = [];\n      const idx = e.target.id;\n      const items = [...this.state.historyData.purchases[idx].items];\n      items.forEach(item => {\n        const sku = item.sku.trim();\n        api.get(`/getProductBySKU/${sku}`).then(result => {\n          const items = result.data;\n          const qtyItem = {\n            ...items,\n            qty: item.qty\n          };\n          arr.push(qtyItem);\n          this.setState({\n            detailItems: arr\n          });\n        }).catch(error => {\n          console.log('Problem with ProductsBySKU. error:');\n          console.log(error);\n        });\n      });\n      return arr;\n    };\n    this.state = {\n      catagory: ['No Catagories'],\n      // for displaying list of catagories( from database) to choose from\n      productsList: [],\n      // for maintaining list of Products by catagory selected from this.state.productCatagory\n      productCatagory: 'Cases',\n      // selected catagory to display\n      buyTotal: 0,\n      //keep track of purchase total\n      historyEmail: '',\n      // for history email input field\n      historyData: [],\n      // for history of cutomer purchase\n      showHistory: false,\n      // flag for alternate render to show History\n      detailItems: [],\n      // for purchase details of purchase items from this.state.historyData\n      holder: 'Enter valid Email'\n    };\n  }\n  componentDidMount() {\n    console.log('component Product did Mount');\n    // recalculate subtotal from productSelections list and set -buyTotal\n    const subtotal = this.props.productSelections.reduce((acc, item) => acc + item.price * item.qty, 0);\n    console.log('new subtotal is: ', subtotal);\n    this.setState({\n      buyTotal: subtotal\n    });\n    // Get list of existing Catagories\n    if (!this.state.showHistory) {\n      api.get('/catagoryList').then(response => {\n        const data = response.data.map(item => item.catagory);\n        this.setState({\n          catagory: data\n        });\n      }).catch(error => {\n        console.log('Problem with catagoryList. error:');\n        console.log(error);\n      });\n      this.getProductsList();\n    }\n  }\n  render() {\n    if (this.state.showHistory) {\n      return /*#__PURE__*/_jsxDEV(PurchaseHistory, {\n        data: this.state.historyData,\n        showPurchaseDetails: this.showPurchaseDetails,\n        details: this.state.detailItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 12\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catSection text-center subHeading\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select products to add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"View Purchase History? Enter email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: this.state.historyEmail,\n          placeholder: this.state.holder,\n          onChange: e => this.setState({\n            historyEmail: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleHistoryData,\n          children: \"Get History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Catagories, {\n          getProductsList: this.getProductsList,\n          cats: this.state.catagory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"col-lg-8 prodSection\",\n          children: /*#__PURE__*/_jsxDEV(ProductsList, {\n            handleSelections: this.handleSelections,\n            productsList: this.state.productsList,\n            cat: this.state.productCatagory,\n            productSelections: this.props.productSelections,\n            handleProductSelection: this.props.handleProductSelection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"col-lg-4 shopSection \",\n          children: /*#__PURE__*/_jsxDEV(ShoppingCart, {\n            itemsList: this.props.productSelections,\n            subTotal: this.state.buyTotal\n            // handleCheckOut={this.handleCheckOut}\n            ,\n            handleProductSelections: this.props.handleProductSelections\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this);\n  }\n}\nexport default _c = withRouter(Products);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","withRouter","Catagories","ShoppingCart","ProductsList","PurchaseHistory","axios","jsxDEV","_jsxDEV","api","create","baseURL","withCredentials","Products","constructor","props","setActiveLi","e","liList","document","getElementsByTagName","i","length","classList","contains","remove","target","add","attributes","name","nodeValue","getProductsList","cat","value","trim","get","then","response","data","selList","productSelections","usedData","map","item","forEach","obj","prod_id","qty","setState","productsList","productCatagory","catagory","state","resp","catch","error","console","log","handleSelections","itemId","buyBox","subTotal","some","Number","itemToAdd","find","selectionsList","reduce","acc","price","handleProductSelections","productsSelections","buyTotal","newList","itemsList","updateList","filter","handleCheckOut","shoppingList","history","push","showHistory","historyData","handleHistoryEmail","historyEmail","handleHistoryData","email","noPurchases","newData","purchase","purchItems","JSON","parse","items","purchTotal","showPurchaseDetails","arr","idx","id","purchases","sku","result","qtyItem","detailItems","holder","componentDidMount","subtotal","render","details","fileName","_jsxFileName","lineNumber","columnNumber","children","className","type","placeholder","onChange","onClick","cats","handleProductSelection","_c","$RefreshReg$"],"sources":["/Users/mzinzun/Documents/SQfiles/thesis-project/client/src/pageComponents/Products/Products.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './Products.css';\nimport {Catagories,ShoppingCart,ProductsList,PurchaseHistory} from \"../../components/components\"\n\n// use axios module for http requests\nimport axios from 'axios';\nconst api = axios.create({\n    baseURL: 'http://localhost:8080',\n    withCredentials: true\n});\n\nclass Products extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n          catagory: ['No Catagories'], // for displaying list of catagories( from database) to choose from\n          productsList: [], // for maintaining list of Products by catagory selected from this.state.productCatagory\n          productCatagory: 'Cases', // selected catagory to display\n          buyTotal: 0, //keep track of purchase total\n          historyEmail: '', // for history email input field\n          historyData: [], // for history of cutomer purchase\n          showHistory: false, // flag for alternate render to show History\n          detailItems: [], // for purchase details of purchase items from this.state.historyData\n          holder: 'Enter valid Email'\n        }\n    };\n    componentDidMount(){\n        console.log('component Product did Mount') \n        // recalculate subtotal from productSelections list and set -buyTotal\n        const subtotal = (this.props.productSelections).reduce((acc,item) =>acc+(item.price*item.qty),0);\n        console.log('new subtotal is: ', subtotal)\n        this.setState({buyTotal: subtotal});\n        // Get list of existing Catagories\n        if (!this.state.showHistory) {\n            api.get('/catagoryList').then((response) => {\n                const data = (response.data).map((item)=>item.catagory)\n                this.setState({catagory: data});\n            })\n            .catch(error=>{\n                console.log('Problem with catagoryList. error:');\n                console.log(error);\n            });\n            this.getProductsList (); \n        }\n    };\n    // function to set css for catagory <li> displayed \n    setActiveLi = (e) => {\n        var liList = document.getElementsByTagName('li');\n        for (let i = 0;i < liList.length;i++) {\n            liList[i].classList.contains('active')&&liList[i].classList.remove('active');\n        }\n        if (e) {\n            e.target.classList.add('active');\n        } else  {\n            for (let i = 0;i < liList.length;i++) {\n                if (liList[i].attributes.name.nodeValue === 'Cases') {\n                    liList[i].classList.add('active');\n                };\n            }\n        };\n    };\n    // function to retrieve and display products List by selected Catagory\n    getProductsList = (e) => {\n        var cat;\n        //  check for initial Products catagory List load from ProductDidMount\n        if (!e) {\n            cat = \"Cases\";\n        } else {\n            cat = (e.target.attributes.name.value).trim();\n        }\n        // set products list to display based on selected catagory - default is cases\n        api.get(`/getProductsByCatagory/${cat}`).then(response => {\n            const data = response.data;\n            let selList = [...this.props.productSelections];\n            var  usedData = data.map(item => {\n               selList.forEach(obj => (obj.prod_id  === item.prod_id)&&(item = {...item, qty: obj.qty }));\n                return item});\n            this.setState({productsList: usedData, productCatagory: data[0].catagory});\n            return this.state.productsList;\n        }).then (resp => this.setActiveLi (e))\n        .catch(error=>{\n            console.log('Problem with ProductsByCatagory. error:');\n            console.log(error);\n        });\n    };\n    // function to manage products selected for purchase\n    handleSelections = (qty,itemId,buyBox)=> {\n        var subTotal = 0;\n        if (buyBox) {\n            // test that item does not already exist in product Selections list\n            if ( !( (this.props.productSelections).some(item => item.prod_id === Number(itemId)) ) ) {\n                const productsList = [...this.state.productsList];\n                let itemToAdd = productsList.find(item=> item.prod_id === Number(itemId));\n                itemToAdd.qty = qty; \n                const selectionsList = [...this.props.productSelections, itemToAdd];\n                subTotal = selectionsList.reduce( ((acc,item)=>acc +(item.price*item.qty)) ,0);\n                this.props.handleProductSelections (selectionsList);\n                this.setState({productsSelections: selectionsList,buyTotal: subTotal})\n            } else {\n                // condition if item exists in Shopping cart needs to change ** Qty is change in item\n                let newList = [...this.props.productSelections];\n                newList = newList.map(item => {\n                    if (item.prod_id === Number(itemId)) {\n                        item.qty = qty;\n                        return item;\n                    }\n                    return item;\n                });\n                subTotal = newList.reduce( ((acc,item)=>acc +(item.price*item.qty)) ,0);\n                this.setState({productsSelections: newList,buyTotal: subTotal})\n            }\n        }\n        if (!buyBox) {\n            console.log('Box unchecked')\n            console.log('New List to display')\n            let itemsList = [...this.props.productSelections];\n            let updateList = itemsList.filter(item => item.prod_id !== Number(itemId));\n            this.props.handleProductSelections (updateList)\n\n\n            subTotal = updateList.reduce( ((acc,item)=>acc +(item.price*item.qty)) ,0);\n            this.setState({buyTotal: subTotal})\n        }\n    };\n    // function to store shopping list to Local Storage ******* Check for useage *********************\n    handleCheckOut =  (shoppingList)=> {\n    //     let stringList = JSON.stringify(shoppingList)\n    //    await localStorage.setItem('holdItems', stringList);\n        this.props.history.push('/CheckOut');\n    };\n    // function to display PurchaseHistory page\n    showHistory = (data)=> {\n      this.setState({historyData: data,showHistory: true});\n    };\n    // function to update historyEmail state\n    handleHistoryEmail = (e)=>{\n        this.setState({historyEmail: e.target.value});\n    };\n    // function to get purchase history data\n    handleHistoryData =()=>{\n        console.log('starting handleHistoryData');\n        const email = this.state.historyEmail;\n        if (email !== '') {\n            api.get(`getCustomerPurchases/${email}`).then((response)=>{\n                const data= response.data;\n                console.log('data response',data)\n                if (data.noPurchases) {\n                    console.log('email not on record');\n                    this.setState({historyEmail: ''})\n\n                } else {\n                    //convert items list from sql dbase from string to array\n                var newData = data.map(purchase =>{\n                    let purchItems = JSON.parse(purchase.items)\n                    let purchTotal = purchItems.reduce((acc,item)=> acc+(item.price*item.qty),0);\n                    purchase.purchTotal = purchTotal;\n                    return purchase;\n                });\n                data.length>0&&this.showHistory(newData);\n                }\n                return data;\n            })\n            .catch(error=>{\n                console.log('Problem with CustomerPurchase. error:');\n                console.log(error);\n            });\n        }\n    }\n     // function to get purchase history item details\n    showPurchaseDetails = (e)=>{\n        var arr =[];\n        const idx=e.target.id;\n        const items = [...this.state.historyData.purchases[idx].items];\n        items.forEach(item => \n            {   \n                    const sku = (item.sku).trim();\n                    api.get(`/getProductBySKU/${sku}`)\n                    .then(result => {\n                        const items = result.data;\n                        const qtyItem = {...items,qty: item.qty} \n                        arr.push(qtyItem);\n                        this.setState({detailItems: arr});\n                    })\n                    .catch(error=>{\n                        console.log('Problem with ProductsBySKU. error:');\n                        console.log(error);\n                    });\n            });\n    return arr\n    }\n    render(){\n         if ((this.state.showHistory)) {\n\t\t\treturn( <PurchaseHistory \n\t\t\t\tdata = {this.state.historyData} \n                showPurchaseDetails = {this.showPurchaseDetails}\n                details = {this.state.detailItems}\n               />)\n         }\n            return(\n                <div>\n                    <div className= \"catSection text-center subHeading\">\n                    <h3 >Select products to add to cart</h3>\n                    <h4>View Purchase History? Enter email address</h4>\n                    <input \n                    type='email' \n                    name='email' \n                    value = {this.state.historyEmail}\n                    placeholder = {this.state.holder}\n                    onChange={(e)=>this.setState({historyEmail: e.target.value})}\n                    />\n                    <button type='button' onClick={this.handleHistoryData}>Get History</button>\n                    <Catagories getProductsList = {this.getProductsList} cats = {this.state.catagory}/>\n                    </div>\n                    <div className=\"row \">\n                        <section className =  \"col-lg-8 prodSection\"><ProductsList \n                        handleSelections = {this.handleSelections} \n                        productsList={this.state.productsList} \n                        cat = {this.state.productCatagory} \n                        productSelections = {this.props.productSelections} \n                        handleProductSelection = {this.props.handleProductSelection}\n                        /></section>\n                        <aside className =  \"col-lg-4 shopSection \"><ShoppingCart \n                        itemsList ={this.props.productSelections} \n                        subTotal = {this.state.buyTotal} \n                        // handleCheckOut={this.handleCheckOut}\n                        handleProductSelections = {this.props.handleProductSelections}\n                        /></aside>\n                    </div>\n                </div>\n            )\n    }\n}\n\nexport default withRouter(Products);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}